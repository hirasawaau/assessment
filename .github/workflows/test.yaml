name: Test

on:
  pull_request:
  push:
    branches:
      - main
  


jobs:
  golangci:
    name: lint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

  integration_test:
    name: integration_test
    runs-on: ubuntu-20.04
    env:
      PORT: 2565
      DATABASE_URL: postgres://postgres:postgres@database:5432/postgres?sslmode=disable
    
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Clean Container
        run: docker compose down
      - name: Build Container
        run: docker compose up -d
      - name: Test
        run: go test -v --tags=integration ./...

  unit_test:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Install Module
        run: go mod download
      - name: Test
        run: go test -v --tags=unit ./...

  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    runs-on: ubuntu-latest
    needs: 
      - "golangci"
      - "integration_test"
      - "unit_test"

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup SHA
        run: echo "GITHUB_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
      
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ghcr.io/hirasawaau/assessment:${{ env.GITHUB_SHA }}

      - name: Login ghcr.io
        uses: docker/login-action@v1.8.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true
      
      - name: Push to GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: |
            ghcr.io/hirasawaau/assessment:${{ env.GITHUB_SHA }}
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
    